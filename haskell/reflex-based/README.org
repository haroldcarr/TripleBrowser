
Initial version done with LOTS of help from Cale Gibbard (at Compose Conference 2016).

* Current state:

- Submit: sending XhrRequest and getting back SPARQL results.
- Aeson parsing and manual collating results.
- Filled in panels with results of submit/SPARQL results.
- first query on panel select works.
- panel refill with selection, done via

#+BEGIN_EXAMPLE
I did not ask the question clearly.  Let me try again.
I have one event that fires.  It triggers an async request.
I need to combine info from the initial event and the response to the request.
In pseudo-code (and leaving out steps), something like:
Event Request : already fired
Event XhrResponse = performRequestAsync Event Request
return $ combine Event Request + Event XhrResponse

<Cale> Ah, okay -- the best way to do that is (perhaps a little unintuitively) to use                                            [15:21]
<Cale> performRequestsAsync :: (Traversable f, MonadWidget t m) =>
                               Event t (f XhrRequest) -> m (Event t (f XhrResponse))
<Cale> The key thing here is that for any type e, we have that (,) e is an instance of Traversable
<Cale> So for example, if we do  fmap (\x -> (x,x)) on the Event t XhrRequest 
       to turn it into an Event t (XhrRequest, XhrRequest)
<Cale> then the result will be an Event t (XhrRequest, XhrResponse)
<Cale> You can put anything you'd like in the first component of the pair, and
       it'll pair that information with the corresponding response
#+END_EXAMPLE

- literals need to be quoted before sending on SPARQL query

** start TCOMon + fuseki + load data

file:///~/ftptmp/ebooks-music-pics/tech/programming-language/haskell/interview/0-Notes.org

** Build via try-reflex

[[https://github.com/ryantrinkle/try-reflex]]

cd ~/try-reflex
./try-reflex
# RTB.hs is linked here
ghcjs --make RTB.hs

file:///Users/carr/try-reflex/RTB.jsexe/index.html

** DONE

Traverse sparql results to build Resp data structure.

See haskell/playpen/aeson-playground/src/AesonAST.hs

- sparql-json.hs
- at.hs

* Next:

- strange behavior: comments -> hindemith : ?subject shows instead of match
- expand/contract panel displays

* TODO:

- build via work-on
- rdf-triple-browser.cabal
- build.sh
- use real UrlEncoder

* Misc:

GET http://127.0.0.1:3030/ds/query?query=%20SELECT%20%20%3Fx0%20%3Fx1%20%3Fx2%20WHERE%20%7B%3Chttp%3A%2F%2Fopenhc.org%2Fdata%2Fevent%2FSlug_Magazine_Salt_Lake_City_Utah%3E%20%3Fx1%20%3Fx2%20.%7D%20Limit%20100

GET http://127.0.0.1:3030/ds/query?query= SELECT  ?x0 ?x1 ?x2 WHERE {<http://openhc.org/data/event/Slug_Magazine_Salt_Lake_City_Utah> ?x1 ?x2 .} Limit 100
