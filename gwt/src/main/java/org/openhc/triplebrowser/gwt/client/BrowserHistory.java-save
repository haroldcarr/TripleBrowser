//
// Created       : 2006 Jul 30 (Sun) 15:53:20 by Harold Carr.
// Last Modified : 2007 Jun 08 (Fri) 22:30:32 by Harold Carr.
//

package com.differentity.client;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import com.google.gwt.user.client.History;
import com.google.gwt.user.client.HistoryListener;
import com.google.gwt.user.client.Window;
import com.google.gwt.user.client.ui.HorizontalPanel;
import com.google.gwt.user.client.ui.TextBox;

public class BrowserHistory
    implements HistoryListener 
{
    private boolean newItemAdded = false;
    private long expandCollapseCounter = 0;

    public BrowserHistory()
    {
    }

    public void initialize()
    {
	// onHistoryChanged() is not called when the application first runs.
	// Call it now, if there is a history token (e.g., from a bookmark).
	String initToken = History.getToken();
	if (initToken.length() != 0) {
	    onHistoryChanged(initToken);
	}

	// Add history listener
	History.addHistoryListener(this);
    }

    public void onHistoryChanged(final String historyToken) 
    {
	//System.out.println(".onHistoryChanged: doQuery - " + historyToken);

	DevTime.getBrowserHistoryLabel().setText("token: " + historyToken);

	// Workaround.
	if (newItemAdded) {
	    newItemAdded = false;
	    return;
	}

	String[] token = 
	    decode(historyToken).split(Main.historyFieldSeparator);

	// REVISIT: history might be longer or shorter than current
	// number of triples in query panel.
	int i = 0;
	List triples = new ArrayList();
	if (token[i++].equals(Main.doQuery)) {
	    for (Iterator hpi = Main.getMainPanel().getQueryPanel().getPanel().iterator();
		 hpi.hasNext(); ) {
		HorizontalPanel triple = (HorizontalPanel) hpi.next();
		Iterator tbi = triple.iterator();
		tbi.next(); // skip RadioButton
		tbi.next(); // skip Button
		tbi.next(); // skip subject MenuBar
		final String subject = token[i++];
		((TextBox)tbi.next()).setText(subject);
		tbi.next(); // skip property MenuBar
		final String property = token[i++];
		((TextBox)tbi.next()).setText(property);
		tbi.next(); // skip value MenuBar
		final String value = token[i++];
		((TextBox)tbi.next()).setText(value);
		triples.add(new Triple(subject, property, value));
	    }
	    Main.getMainPanel().doQuery(false, triples, token[i]);
	} else if (token[0].equals("")) {
	    ;
	} else {
	    Window.alert(".onHistoryChanged: unknown:" + historyToken);
	}
    }

    // MainPanel()
    public void recordDoQuery(final boolean keepHistory,
			      final List triples,
			      final String setContentsOf)
    {
	try {
	    //System.out.println(".recordDoQuery->:");
	    if (! keepHistory) {
		return;
	    }

	    final QueryPanel queryPanel = Main.getMainPanel().getQueryPanel();

	    final StringBuffer stringBuffer = new StringBuffer(Main.doQuery);
	    stringBuffer.append(Main.historyFieldSeparator);
	    for (final Iterator i = triples.iterator(); i.hasNext(); ) {
		final Triple triple = (Triple) i.next();
		stringBuffer.append(triple.getSubject());
		stringBuffer.append(Main.historyFieldSeparator);
		stringBuffer.append(triple.getProperty());
		stringBuffer.append(Main.historyFieldSeparator);
		stringBuffer.append(triple.getValue());
		stringBuffer.append(Main.historyFieldSeparator);
	    }
	    stringBuffer.append(setContentsOf);
	    newItem(stringBuffer.toString());
	} finally {
	    //System.out.println(".recordDoQuery<-:");
	}
    }

    ////////////////////////////////////////////////////
    //
    // Implementation
    //

    private void newItem(String x)
    {
	// workaround to not take action in onHistoryChanged
	newItemAdded = true;

	History.newItem(encode(x));
    }

    private String encode (String x)
    {
	// GWT uses # to delimit history token in URI.
	return x.replaceAll("#", "SHARPT");
    }

    
    private String decode (String x)
    {
	return x.replaceAll("SHARPT", "#");
    }
}

// End of file.
